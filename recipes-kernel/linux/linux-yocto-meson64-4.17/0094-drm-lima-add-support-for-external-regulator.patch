From 618284171c024f29011e8e691d0f1808cc41804d Mon Sep 17 00:00:00 2001
From: Simon Shields <simon@lineageos.org>
Date: Sat, 13 Jan 2018 16:06:29 +1100
Subject: [PATCH 094/134] drm: lima: add support for external regulator

if this regulator is not enabled on platforms that require it,
the whole system will hang when accessing the GPU registers

Signed-off-by: Simon Shields <simon@lineageos.org>
---
 drivers/gpu/drm/lima/lima.h        |  1 +
 drivers/gpu/drm/lima/lima_device.c | 36 ++++++++++++++++++++++++++++++++++++
 2 files changed, 37 insertions(+)

diff --git a/drivers/gpu/drm/lima/lima.h b/drivers/gpu/drm/lima/lima.h
index 81a0cf6..bffc4ec 100644
--- a/drivers/gpu/drm/lima/lima.h
+++ b/drivers/gpu/drm/lima/lima.h
@@ -100,6 +100,7 @@ struct lima_device {
 	struct clk *clk_bus;
 	struct clk *clk_gpu;
 	struct reset_control *reset;
+	struct regulator *regulator;
 
 	struct lima_pmu *pmu;
 
diff --git a/drivers/gpu/drm/lima/lima_device.c b/drivers/gpu/drm/lima/lima_device.c
index 00ea83d..5cf346f 100644
--- a/drivers/gpu/drm/lima/lima_device.c
+++ b/drivers/gpu/drm/lima/lima_device.c
@@ -1,3 +1,4 @@
+#include <linux/regulator/consumer.h>
 #include <linux/reset.h>
 #include <linux/clk.h>
 #include <linux/dma-mapping.h>
@@ -78,6 +79,35 @@ static void lima_clk_fini(struct lima_device *dev)
 	clk_disable_unprepare(dev->clk_bus);
 }
 
+static int lima_regulator_init(struct lima_device *dev)
+{
+	int ret;
+	dev->regulator = devm_regulator_get_optional(dev->dev, "mali");
+	if (IS_ERR(dev->regulator)) {
+		ret = PTR_ERR(dev->regulator);
+		dev->regulator = NULL;
+		if (ret == -ENODEV)
+			return 0;
+		dev_err(dev->dev, "failed to get regulator: %ld\n", PTR_ERR(dev->regulator));
+		return ret;
+	}
+
+	ret = regulator_enable(dev->regulator);
+	if (ret < 0) {
+		dev_err(dev->dev, "failed to enable regulator: %d\n", ret);
+		return ret;
+	}
+
+	return 0;
+}
+
+static void lima_regulator_fini(struct lima_device *dev)
+{
+	if (dev->regulator)
+		regulator_disable(dev->regulator);
+}
+
+
 static int lima_init_ip(struct lima_device *dev, const char *name,
 			struct lima_ip *ip, u32 offset)
 {
@@ -226,6 +256,10 @@ int lima_device_init(struct lima_device *ldev)
 		return err;
 	}
 
+	if ((err = lima_regulator_init(ldev))) {
+		return err;
+	}
+
 	ldev->empty_vm = lima_vm_create(ldev);
 	if (!ldev->empty_vm) {
 		err = -ENOMEM;
@@ -339,5 +373,7 @@ void lima_device_fini(struct lima_device *ldev)
 
 	lima_vm_put(ldev->empty_vm);
 
+	lima_regulator_fini(ldev);
+
 	lima_clk_fini(ldev);
 }
-- 
2.0.1

