From d8d6fd71e62c5e09da6557c4e47c80f30052a957 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Wed, 21 Mar 2018 15:33:44 +0800
Subject: [PATCH 118/134] drm/lima: add switch-delay config for PMU

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/lima.h        |  1 +
 drivers/gpu/drm/lima/lima_device.c | 15 +++++++++++++--
 drivers/gpu/drm/lima/lima_pmu.c    |  2 +-
 3 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima.h b/drivers/gpu/drm/lima/lima.h
index 0c88465..377410d 100644
--- a/drivers/gpu/drm/lima/lima.h
+++ b/drivers/gpu/drm/lima/lima.h
@@ -50,6 +50,7 @@ struct lima_ip {
 
 struct lima_pmu {
 	struct lima_ip ip;
+	uint32_t switch_delay;
 };
 
 struct lima_l2_cache {
diff --git a/drivers/gpu/drm/lima/lima_device.c b/drivers/gpu/drm/lima/lima_device.c
index 61c9c8166..aaaa4c7 100644
--- a/drivers/gpu/drm/lima/lima_device.c
+++ b/drivers/gpu/drm/lima/lima_device.c
@@ -295,12 +295,23 @@ int lima_device_init(struct lima_device *ldev)
 	}
 
 	/* pmu is optional and not always present */
-	if ((err = lima_init_ip(ldev, "pmu", &ldev->pmu->ip, LIMA_PMU_BASE)) ||
-	    (err = lima_pmu_init(ldev->pmu))) {
+	if (lima_init_ip(ldev, "pmu", &ldev->pmu->ip, LIMA_PMU_BASE)) {
 		dev_info(ldev->dev, "no PMU present\n");
 		kfree(ldev->pmu);
 		ldev->pmu = NULL;
 	}
+	else {
+		/* If this value is too low, when in high GPU clk freq,
+		 * GPU will be in unstable state. */
+		if (of_property_read_u32(np, "switch-delay", &ldev->pmu->switch_delay))
+			ldev->pmu->switch_delay = 0xff;
+
+		if ((err = lima_pmu_init(ldev->pmu))) {
+			kfree(ldev->pmu);
+			ldev->pmu = NULL;
+			goto err_out;
+		}
+	}
 
 	if (ldev->gpu_type != GPU_MALI450) {
 		ldev->l2_cache = kzalloc(sizeof(*ldev->l2_cache), GFP_KERNEL);
diff --git a/drivers/gpu/drm/lima/lima_pmu.c b/drivers/gpu/drm/lima/lima_pmu.c
index 2478325..1b518c0 100644
--- a/drivers/gpu/drm/lima/lima_pmu.c
+++ b/drivers/gpu/drm/lima/lima_pmu.c
@@ -52,7 +52,7 @@ int lima_pmu_init(struct lima_pmu *pmu)
 	struct lima_device *dev = pmu->ip.dev;
 
 	pmu_write(INT_MASK, 0);
-	pmu_write(SW_DELAY, 0xff);
+	pmu_write(SW_DELAY, pmu->switch_delay);
 
 	/* status reg 1=off 0=on */
 	stat = pmu_read(STATUS);
-- 
2.0.1

