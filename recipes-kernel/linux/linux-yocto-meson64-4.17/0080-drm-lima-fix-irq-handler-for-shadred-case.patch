From 667bd862e1e7814595aff6d16a6cff6488976e89 Mon Sep 17 00:00:00 2001
From: Marek Vasut <marex@denx.de>
Date: Sat, 23 Sep 2017 00:06:06 +0200
Subject: [PATCH 080/134] drm/lima: fix irq handler for shadred case

v2: (Qiang Yu)
  1. also fix the GP and PP irq handler
  2. distinguish IRQ_NONE/IRQ_HANDLED case return

ZynqMP (aarch64) only have one interrupt for everything
on the GPU and in case get GP interrupt, the MMU interrupt
handler is triggered first. We only want to indicate that
the task is done if status != 0.

Signed-off-by: Marek Vasut <marex@denx.de>
Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/lima_gp.c  | 6 +++++-
 drivers/gpu/drm/lima/lima_mmu.c | 6 +++++-
 drivers/gpu/drm/lima/lima_pp.c  | 6 +++++-
 3 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima_gp.c b/drivers/gpu/drm/lima/lima_gp.c
index 68cd081..4b8244a 100644
--- a/drivers/gpu/drm/lima/lima_gp.c
+++ b/drivers/gpu/drm/lima/lima_gp.c
@@ -107,6 +107,10 @@ static irqreturn_t lima_gp_irq_handler(int irq, void *data)
 	struct lima_device *dev = gp->ip.dev;
 	u32 state = gp_read(INT_STAT);
 
+	/* for shared irq case */
+	if (!state)
+		return IRQ_NONE;
+
 	if (state & LIMA_GP_IRQ_MASK_ERROR) {
 		u32 status = gp_read(STATUS);
 		dev_info(dev->dev, "gp error irq state=%x status=%x\n",
@@ -131,7 +135,7 @@ static irqreturn_t lima_gp_irq_handler(int irq, void *data)
 	}
 
 	gp_write(INT_CLEAR, state);
-	return IRQ_NONE;
+	return IRQ_HANDLED;
 }
 
 static void lima_gp_soft_reset_async(struct lima_gp *gp)
diff --git a/drivers/gpu/drm/lima/lima_mmu.c b/drivers/gpu/drm/lima/lima_mmu.c
index 06ccc6d5..0aba9be 100644
--- a/drivers/gpu/drm/lima/lima_mmu.c
+++ b/drivers/gpu/drm/lima/lima_mmu.c
@@ -53,6 +53,10 @@ static irqreturn_t lima_mmu_irq_handler(int irq, void *data)
 	struct lima_device *dev = mmu->ip.dev;
 	u32 status = mmu_read(INT_STATUS);
 
+	/* for shared irq case */
+	if (!status)
+		return IRQ_NONE;
+
 	if (status & LIMA_MMU_INT_PAGE_FAULT) {
 		u32 fault = mmu_read(PAGE_FAULT_ADDR);
 		dev_info(dev->dev, "mmu page fault at 0x%x from bus id %d of type %s on %s\n",
@@ -69,7 +73,7 @@ static irqreturn_t lima_mmu_irq_handler(int irq, void *data)
 	lima_sched_pipe_task_done(mmu->pipe, true);
 
 	mmu_write(INT_CLEAR, status);
-	return IRQ_NONE;
+	return IRQ_HANDLED;
 }
 
 int lima_mmu_init(struct lima_mmu *mmu)
diff --git a/drivers/gpu/drm/lima/lima_pp.c b/drivers/gpu/drm/lima/lima_pp.c
index e8ea92c..f495c7f 100644
--- a/drivers/gpu/drm/lima/lima_pp.c
+++ b/drivers/gpu/drm/lima/lima_pp.c
@@ -90,6 +90,10 @@ static irqreturn_t lima_pp_core_irq_handler(int irq, void *data)
 	struct lima_pp *pp = dev->pp;
 	u32 state = pp_read(INT_STATUS);
 
+	/* for shared irq case */
+	if (!state)
+		return IRQ_NONE;
+
 	if (state & LIMA_PP_IRQ_MASK_ERROR) {
 		u32 status = pp_read(STATUS);
 		dev_info(dev->dev, "pp error irq state=%x status=%x\n",
@@ -103,7 +107,7 @@ static irqreturn_t lima_pp_core_irq_handler(int irq, void *data)
 	}
 
 	pp_write(INT_CLEAR, state);
-	return IRQ_NONE;
+	return IRQ_HANDLED;
 }
 
 static void lima_pp_core_soft_reset_async(struct lima_pp_core *core)
-- 
2.0.1

