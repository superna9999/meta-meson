From a7f6350520134cfcc094e044de1fd380c8ccbfda Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Mon, 7 May 2018 16:30:29 +0800
Subject: [PATCH 90/98] drm/lima: use mutex for possible sleep case

lima_sched_context_add_fence may call dma_fence_wait
and go to sleep.

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/lima_sched.c | 12 +++++++-----
 drivers/gpu/drm/lima/lima_sched.h |  2 +-
 2 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima_sched.c b/drivers/gpu/drm/lima/lima_sched.c
index 3f19ce25..8e4f2ff 100644
--- a/drivers/gpu/drm/lima/lima_sched.c
+++ b/drivers/gpu/drm/lima/lima_sched.c
@@ -185,7 +185,7 @@ int lima_sched_context_init(struct lima_sched_pipe *pipe,
 	if (!context->fences)
 		return -ENOMEM;
 
-	spin_lock_init(&context->lock);
+	mutex_init(&context->lock);
 	err = drm_sched_entity_init(&pipe->base, &context->base, rq,
 				    lima_sched_max_tasks, guilty);
 	if (err) {
@@ -202,6 +202,8 @@ void lima_sched_context_fini(struct lima_sched_pipe *pipe,
 {
 	drm_sched_entity_fini(&pipe->base, &context->base);
 
+	mutex_destroy(&context->lock);
+
 	if (context->fences)
 		kfree(context->fences);
 }
@@ -213,7 +215,7 @@ static uint32_t lima_sched_context_add_fence(struct lima_sched_context *context,
 	uint32_t seq, idx, i, n;
 	struct dma_fence *other;
 
-	spin_lock(&context->lock);
+	mutex_lock(&context->lock);
 
 	seq = context->sequence;
 	idx = seq & (lima_sched_max_tasks - 1);
@@ -236,7 +238,7 @@ static uint32_t lima_sched_context_add_fence(struct lima_sched_context *context,
 			break;
 	}
 
-	spin_unlock(&context->lock);
+	mutex_unlock(&context->lock);
 
 	dma_fence_put(other);
 
@@ -250,7 +252,7 @@ static struct dma_fence *lima_sched_context_get_fence(struct lima_sched_context
 	struct dma_fence *fence;
 	int idx;
 
-	spin_lock(&context->lock);
+	mutex_lock(&context->lock);
 
 	/* assume no overflow */
 	if (seq >= context->sequence) {
@@ -267,7 +269,7 @@ static struct dma_fence *lima_sched_context_get_fence(struct lima_sched_context
 	fence = dma_fence_get(context->fences[idx]);
 
 out:
-	spin_unlock(&context->lock);
+	mutex_unlock(&context->lock);
 
 	return fence;
 }
diff --git a/drivers/gpu/drm/lima/lima_sched.h b/drivers/gpu/drm/lima/lima_sched.h
index 062395b..b02c4f5 100644
--- a/drivers/gpu/drm/lima/lima_sched.h
+++ b/drivers/gpu/drm/lima/lima_sched.h
@@ -42,7 +42,7 @@ struct lima_sched_task {
 
 struct lima_sched_context {
 	struct drm_sched_entity base;
-	spinlock_t lock;
+	struct mutex lock;
 	struct dma_fence **fences;
 	uint32_t sequence;
 };
-- 
2.0.1

