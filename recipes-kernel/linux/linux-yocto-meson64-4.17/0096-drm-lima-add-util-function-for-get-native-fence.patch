From 5e1ed820f70117a278f443288cc7f4dc8ef35bb2 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Fri, 11 May 2018 18:35:40 +0800
Subject: [PATCH 96/98] drm/lima: add util function for get native fence

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/lima_ctx.c   | 19 +++++++++++++++++
 drivers/gpu/drm/lima/lima_ctx.h   |  3 +++
 drivers/gpu/drm/lima/lima_drv.c   | 43 +++++++++++++++++++++++++++++----------
 drivers/gpu/drm/lima/lima_gem.c   | 20 ++----------------
 drivers/gpu/drm/lima/lima_sched.c | 30 ---------------------------
 drivers/gpu/drm/lima/lima_sched.h |  2 --
 include/uapi/drm/lima_drm.h       |  4 ++--
 7 files changed, 58 insertions(+), 63 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima_ctx.c b/drivers/gpu/drm/lima/lima_ctx.c
index 39c2dfa..0bfa6ff 100644
--- a/drivers/gpu/drm/lima/lima_ctx.c
+++ b/drivers/gpu/drm/lima/lima_ctx.c
@@ -122,3 +122,22 @@ void lima_ctx_mgr_fini(struct lima_ctx_mgr *mgr)
 
 	idr_destroy(&mgr->handles);
 }
+
+struct dma_fence *lima_ctx_get_native_fence(struct lima_ctx_mgr *mgr,
+					    u32 ctx, u32 pipe, u32 seq)
+{
+	struct lima_ctx *c;
+	struct dma_fence *ret;
+
+	if (pipe >= lima_pipe_num)
+		return ERR_PTR(-EINVAL);
+
+	c = lima_ctx_get(mgr, ctx);
+	if (!c)
+		return ERR_PTR(-ENOENT);
+
+	ret = lima_sched_context_get_fence(c->context + pipe, seq);
+
+	lima_ctx_put(c);
+	return ret;
+}
diff --git a/drivers/gpu/drm/lima/lima_ctx.h b/drivers/gpu/drm/lima/lima_ctx.h
index 49c9727..4cb50cb 100644
--- a/drivers/gpu/drm/lima/lima_ctx.h
+++ b/drivers/gpu/drm/lima/lima_ctx.h
@@ -45,4 +45,7 @@ void lima_ctx_put(struct lima_ctx *ctx);
 void lima_ctx_mgr_init(struct lima_ctx_mgr *mgr);
 void lima_ctx_mgr_fini(struct lima_ctx_mgr *mgr);
 
+struct dma_fence *lima_ctx_get_native_fence(struct lima_ctx_mgr *mgr,
+					    u32 ctx, u32 pipe, u32 seq);
+
 #endif
diff --git a/drivers/gpu/drm/lima/lima_drv.c b/drivers/gpu/drm/lima/lima_drv.c
index 9975162..2beee40 100644
--- a/drivers/gpu/drm/lima/lima_drv.c
+++ b/drivers/gpu/drm/lima/lima_drv.c
@@ -196,24 +196,45 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 	return err;
 }
 
+static int lima_wait_fence(struct dma_fence *fence, u64 timeout_ns)
+{
+	signed long ret;
+
+	if (!timeout_ns)
+		ret = dma_fence_is_signaled(fence) ? 0 : -EBUSY;
+	else {
+		unsigned long timeout = lima_timeout_to_jiffies(timeout_ns);
+
+		/* must use long for result check because in 64bit arch int
+		 * will overflow if timeout is too large and get <0 result
+		 */
+		ret = dma_fence_wait_timeout(fence, true, timeout);
+		if (ret == 0)
+			ret = timeout ? -ETIMEDOUT : -EBUSY;
+		else if (ret > 0)
+			ret = 0;
+	}
+
+	return ret;
+}
+
 static int lima_ioctl_wait_fence(struct drm_device *dev, void *data, struct drm_file *file)
 {
 	struct drm_lima_wait_fence *args = data;
 	struct lima_drm_priv *priv = file->driver_priv;
-	struct lima_ctx *ctx;
-	int err;
-
-	if (args->pipe >= lima_pipe_num)
-		return -EINVAL;
+	struct dma_fence *fence;
+	int err = 0;
 
-	ctx = lima_ctx_get(&priv->ctx_mgr, args->ctx);
-	if (!ctx)
-		return -ENOENT;
+	fence = lima_ctx_get_native_fence(&priv->ctx_mgr, args->ctx,
+					  args->pipe, args->seq);
+	if (IS_ERR(fence))
+		return PTR_ERR(fence);
 
-	err = lima_sched_context_wait_fence(ctx->context + args->pipe,
-					    args->fence, args->timeout_ns);
+	if (fence) {
+		err = lima_wait_fence(fence, args->timeout_ns);
+		dma_fence_put(fence);
+	}
 
-	lima_ctx_put(ctx);
 	return err;
 }
 
diff --git a/drivers/gpu/drm/lima/lima_gem.c b/drivers/gpu/drm/lima/lima_gem.c
index de6f7b6..9eee0d7 100644
--- a/drivers/gpu/drm/lima/lima_gem.c
+++ b/drivers/gpu/drm/lima/lima_gem.c
@@ -287,25 +287,9 @@ static int lima_gem_add_deps(struct lima_ctx_mgr *mgr, struct lima_submit *submi
 		struct dma_fence *fence;
 
 		if (dep->type == LIMA_SUBMIT_DEP_FENCE) {
-			struct lima_ctx *ctx;
-
-			if (dep->fence.pipe >= lima_pipe_num) {
-				err = -EINVAL;
-				break;
-			}
-
-			ctx = lima_ctx_get(mgr, dep->fence.ctx);
-			if (!ctx) {
-				err = -ENOENT;
-				break;
-			}
-
-			fence = lima_sched_context_get_fence(
-				ctx->context + dep->fence.pipe,
+			fence = lima_ctx_get_native_fence(
+				mgr, dep->fence.ctx, dep->fence.pipe,
 				dep->fence.seq);
-
-			lima_ctx_put(ctx);
-
 			if (IS_ERR(fence)) {
 				err = PTR_ERR(fence);
 				break;
diff --git a/drivers/gpu/drm/lima/lima_sched.c b/drivers/gpu/drm/lima/lima_sched.c
index a8ea412..1728948 100644
--- a/drivers/gpu/drm/lima/lima_sched.c
+++ b/drivers/gpu/drm/lima/lima_sched.c
@@ -284,36 +284,6 @@ uint32_t lima_sched_context_queue_task(struct lima_sched_context *context,
 	return seq;
 }
 
-int lima_sched_context_wait_fence(struct lima_sched_context *context,
-				  u32 fence, u64 timeout_ns)
-{
-	signed long ret;
-	struct dma_fence *f = lima_sched_context_get_fence(context, fence);
-
-	if (IS_ERR(f))
-		return PTR_ERR(f);
-	else if (!f)
-		return 0;
-
-	if (!timeout_ns)
-		ret = dma_fence_is_signaled(f) ? 0 : -EBUSY;
-	else {
-		unsigned long timeout = lima_timeout_to_jiffies(timeout_ns);
-
-		/* must use long for result check because in 64bit arch int
-		 * will overflow if timeout is too large and get <0 result
-		 */
-		ret = dma_fence_wait_timeout(f, true, timeout);
-		if (ret == 0)
-			ret = timeout ? -ETIMEDOUT : -EBUSY;
-		else if (ret > 0)
-			ret = 0;
-	}
-
-	dma_fence_put(f);
-	return ret;
-}
-
 static struct dma_fence *lima_sched_dependency(struct drm_sched_job *job,
 					       struct drm_sched_entity *entity)
 {
diff --git a/drivers/gpu/drm/lima/lima_sched.h b/drivers/gpu/drm/lima/lima_sched.h
index bba9886..7898399 100644
--- a/drivers/gpu/drm/lima/lima_sched.h
+++ b/drivers/gpu/drm/lima/lima_sched.h
@@ -107,8 +107,6 @@ uint32_t lima_sched_context_queue_task(struct lima_sched_context *context,
 				       uint32_t *done);
 struct dma_fence *lima_sched_context_get_fence(
 	struct lima_sched_context *context, uint32_t seq);
-int lima_sched_context_wait_fence(struct lima_sched_context *context,
-				  u32 fence, u64 timeout_ns);
 
 int lima_sched_pipe_init(struct lima_sched_pipe *pipe, const char *name);
 void lima_sched_pipe_fini(struct lima_sched_pipe *pipe);
diff --git a/include/uapi/drm/lima_drm.h b/include/uapi/drm/lima_drm.h
index 364eeb5..e3f8d77 100644
--- a/include/uapi/drm/lima_drm.h
+++ b/include/uapi/drm/lima_drm.h
@@ -146,10 +146,10 @@ union drm_lima_gem_submit {
 };
 
 struct drm_lima_wait_fence {
+	__u32 ctx;         /* in */
 	__u32 pipe;        /* in */
-	__u32 fence;       /* in */
 	__u64 timeout_ns;  /* in */
-	__u32 ctx;         /* in */
+	__u32 seq;         /* in */
 	__u32 _pad;
 };
 
-- 
2.0.1

