From 77ef75a99f9ddc1a95beef096f29dcea9c42ee53 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Tue, 11 Apr 2017 11:46:48 +0800
Subject: [PATCH 051/134] drm/lima: add gem object creation

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/Makefile   |  3 ++-
 drivers/gpu/drm/lima/lima.h     |  4 +++
 drivers/gpu/drm/lima/lima_drv.c | 16 +++++++++--
 drivers/gpu/drm/lima/lima_gem.c | 59 +++++++++++++++++++++++++++++++++++++++++
 include/uapi/drm/lima_drm.h     | 11 +++++++-
 5 files changed, 89 insertions(+), 4 deletions(-)
 create mode 100644 drivers/gpu/drm/lima/lima_gem.c

diff --git a/drivers/gpu/drm/lima/Makefile b/drivers/gpu/drm/lima/Makefile
index 9dd7b58..7ee2a3d 100644
--- a/drivers/gpu/drm/lima/Makefile
+++ b/drivers/gpu/drm/lima/Makefile
@@ -5,6 +5,7 @@ lima-y := \
 	lima_l2_cache.o \
 	lima_mmu.o \
 	lima_gp.o \
-	lima_pp.o
+	lima_pp.o \
+	lima_gem.o
 
 obj-$(CONFIG_DRM_LIMA) += lima.o
diff --git a/drivers/gpu/drm/lima/lima.h b/drivers/gpu/drm/lima/lima.h
index 493e477..cadc409 100644
--- a/drivers/gpu/drm/lima/lima.h
+++ b/drivers/gpu/drm/lima/lima.h
@@ -107,4 +107,8 @@ void lima_gp_fini(struct lima_gp *gp);
 int lima_pp_init(struct lima_pp *pp);
 void lima_pp_fini(struct lima_pp *pp);
 
+int lima_gem_create_handle(struct drm_device *dev, struct drm_file *file,
+			   u32 size, u32 flags, u32 *handle);
+void lima_gem_free_object(struct drm_gem_object *obj);
+
 #endif
diff --git a/drivers/gpu/drm/lima/lima_drv.c b/drivers/gpu/drm/lima/lima_drv.c
index 88a62fa..8b7feee 100644
--- a/drivers/gpu/drm/lima/lima_drv.c
+++ b/drivers/gpu/drm/lima/lima_drv.c
@@ -20,6 +20,16 @@ static int lima_ioctl_info(struct drm_device *dev, void *data, struct drm_file *
 	return 0;
 }
 
+static int lima_ioctl_gem_create(struct drm_device *dev, void *data, struct drm_file *file)
+{
+	struct drm_lima_gem_create *args = data;
+
+	if (args->flags)
+		return -EINVAL;
+
+	return lima_gem_create_handle(dev, file, args->size, args->flags, &args->handle);
+}
+
 static int lima_drm_driver_load(struct drm_device *dev, unsigned long flags)
 {
 	struct lima_device *ldev;
@@ -57,7 +67,8 @@ static int lima_drm_driver_unload(struct drm_device *dev)
 }
 
 static const struct drm_ioctl_desc lima_drm_driver_ioctls[] = {
-        DRM_IOCTL_DEF_DRV(LIMA_INFO, lima_ioctl_info, DRM_AUTH|DRM_RENDER_ALLOW),
+	DRM_IOCTL_DEF_DRV(LIMA_INFO, lima_ioctl_info, DRM_AUTH|DRM_RENDER_ALLOW),
+	DRM_IOCTL_DEF_DRV(LIMA_GEM_CREATE, lima_ioctl_gem_create, DRM_AUTH|DRM_RENDER_ALLOW),
 };
 
 static const struct file_operations lima_drm_driver_fops = {
@@ -71,12 +82,13 @@ static const struct file_operations lima_drm_driver_fops = {
 };
 
 static struct drm_driver lima_drm_driver = {
-	.driver_features    = DRIVER_RENDER,
+	.driver_features    = DRIVER_RENDER | DRIVER_GEM,
 	.load		    = lima_drm_driver_load,
 	.unload             = lima_drm_driver_unload,
 	.ioctls             = lima_drm_driver_ioctls,
 	.num_ioctls         = ARRAY_SIZE(lima_drm_driver_ioctls),
 	.fops               = &lima_drm_driver_fops,
+	.gem_free_object_unlocked = lima_gem_free_object,
 	.name               = "lima",
 	.desc               = "lima DRM",
 	.date               = "20170325",
diff --git a/drivers/gpu/drm/lima/lima_gem.c b/drivers/gpu/drm/lima/lima_gem.c
new file mode 100644
index 0000000..4cc1176
--- /dev/null
+++ b/drivers/gpu/drm/lima/lima_gem.c
@@ -0,0 +1,59 @@
+#include <drm/drmP.h>
+#include <drm/drm_gem.h>
+
+
+struct lima_bo {
+	struct drm_gem_object gem;
+};
+
+static inline
+struct lima_bo *to_lima_bo(struct drm_gem_object *obj)
+{
+	return container_of(obj, struct lima_bo, gem);
+}
+
+static struct lima_bo *lima_gem_create_bo(struct drm_device *dev, u32 size, u32 flags)
+{
+	int err;
+	struct lima_bo *bo;
+
+	size = PAGE_ALIGN(size);
+
+	bo = kzalloc(sizeof(*bo), GFP_KERNEL);
+	if (!bo)
+		return ERR_PTR(-ENOMEM);
+
+	err = drm_gem_object_init(dev, &bo->gem, size);
+	if (err) {
+		kfree(bo);
+		return ERR_PTR(err);
+	}
+
+	return bo;
+}
+
+int lima_gem_create_handle(struct drm_device *dev, struct drm_file *file,
+			   u32 size, u32 flags, u32 *handle)
+{
+	int err;
+	struct lima_bo *bo;
+
+	bo = lima_gem_create_bo(dev, size, flags);
+	if (IS_ERR(bo))
+		return PTR_ERR(bo);
+
+	err = drm_gem_handle_create(file, &bo->gem, handle);
+
+	/* drop reference from allocate - handle holds it now */
+	drm_gem_object_unreference_unlocked(&bo->gem);
+
+	return err;
+}
+
+void lima_gem_free_object(struct drm_gem_object *obj)
+{
+	struct lima_bo *bo = to_lima_bo(obj);
+
+	drm_gem_object_release(obj);
+	kfree(bo);
+}
diff --git a/include/uapi/drm/lima_drm.h b/include/uapi/drm/lima_drm.h
index f065b46..c81c381 100644
--- a/include/uapi/drm/lima_drm.h
+++ b/include/uapi/drm/lima_drm.h
@@ -35,9 +35,18 @@ struct drm_lima_info {
 	__u32 num_pp;  /* out */
 };
 
-#define DRM_LIMA_INFO 0x00
+struct drm_lima_gem_create {
+	__u32 size;    /* in */
+	__u32 flags;   /* in */
+	__u32 handle;  /* out */
+	__u32 pad;
+};
+
+#define DRM_LIMA_INFO        0x00
+#define DRM_LIMA_GEM_CREATE  0x01
 
 #define DRM_IOCTL_LIMA_INFO DRM_IOR(DRM_COMMAND_BASE + DRM_LIMA_INFO, struct drm_lima_info)
+#define DRM_IOCTL_LIMA_GEM_CREATE DRM_IOWR(DRM_COMMAND_BASE + DRM_LIMA_GEM_CREATE, struct drm_lima_gem_create)
 
 #if defined(__cplusplus)
 }
-- 
2.0.1

