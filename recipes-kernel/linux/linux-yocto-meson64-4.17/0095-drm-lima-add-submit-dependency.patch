From 89d853a7f8ea900ffab431b71c4b69863e671111 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Fri, 11 May 2018 18:04:46 +0800
Subject: [PATCH 95/98] drm/lima: add submit dependency

For support EGL_ANDROID_native_fence_sync.

Submit accept dependency from other tasks. Dependency
can be lima native fence or sync file fd. Explicit
sync can be enabled by the submit flags.

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/lima_drv.c   |  26 ++++++++-
 drivers/gpu/drm/lima/lima_drv.h   |   5 ++
 drivers/gpu/drm/lima/lima_gem.c   | 110 ++++++++++++++++++++++++++++++++++----
 drivers/gpu/drm/lima/lima_sched.c |   4 +-
 drivers/gpu/drm/lima/lima_sched.h |   2 +
 include/uapi/drm/lima_drm.h       |  29 ++++++++++
 6 files changed, 163 insertions(+), 13 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima_drv.c b/drivers/gpu/drm/lima/lima_drv.c
index 1fbff17..9975162 100644
--- a/drivers/gpu/drm/lima/lima_drv.c
+++ b/drivers/gpu/drm/lima/lima_drv.c
@@ -105,6 +105,8 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 	struct lima_device *ldev = to_lima_dev(dev);
 	struct lima_drm_priv *priv = file->driver_priv;
 	struct drm_lima_gem_submit_bo *bos;
+	struct ttm_validate_buffer *vbs;
+	union drm_lima_gem_submit_dep *deps = NULL;
 	struct lima_sched_pipe *pipe;
 	struct lima_sched_task *task;
 	struct lima_ctx *ctx;
@@ -114,11 +116,16 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 	if (args->pipe >= lima_pipe_num || args->nr_bos == 0)
 		return -EINVAL;
 
+	if (args->flags & ~(LIMA_SUBMIT_FLAG_EXPLICIT_FENCE |
+			    LIMA_SUBMIT_FLAG_SYNC_FD_OUT))
+		return -EINVAL;
+
 	pipe = ldev->pipe + args->pipe;
 	if (args->frame_size != pipe->frame_size)
 		return -EINVAL;
 
-	size = args->nr_bos * (sizeof(*submit.bos) + sizeof(*submit.vbs));
+	size = args->nr_bos * (sizeof(*submit.bos) + sizeof(*submit.vbs)) +
+		args->nr_deps * sizeof(*submit.deps);
 	bos = kzalloc(size, GFP_KERNEL);
 	if (!bos)
 		return -ENOMEM;
@@ -129,6 +136,17 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 		goto out0;
 	}
 
+	vbs = (void *)bos + size;
+
+	if (args->nr_deps) {
+		deps = (void *)vbs + args->nr_bos * sizeof(*submit.vbs);
+		size = args->nr_deps * sizeof(*submit.deps);
+		if (copy_from_user(deps, u64_to_user_ptr(args->deps), size)) {
+			err = -EFAULT;
+			goto out0;
+		}
+	}
+
 	task = kmem_cache_zalloc(pipe->task_slab, GFP_KERNEL);
 	if (!task) {
 		err = -ENOMEM;
@@ -153,16 +171,20 @@ static int lima_ioctl_gem_submit(struct drm_device *dev, void *data, struct drm_
 
 	submit.pipe = args->pipe;
 	submit.bos = bos;
-	submit.vbs = (void *)bos + size;
+	submit.vbs = vbs;
 	submit.nr_bos = args->nr_bos;
 	submit.task = task;
 	submit.ctx = ctx;
+	submit.deps = deps;
+	submit.nr_deps = args->nr_deps;
+	submit.flags = args->flags;
 
 	err = lima_gem_submit(file, &submit);
 	if (!err) {
 		struct drm_lima_gem_submit_out *out = data;
 		out->fence = submit.fence;
 		out->done = submit.done;
+		out->sync_fd = submit.sync_fd;
 	}
 
 	lima_ctx_put(ctx);
diff --git a/drivers/gpu/drm/lima/lima_drv.h b/drivers/gpu/drm/lima/lima_drv.h
index 3d6d52a..f01a2e4 100644
--- a/drivers/gpu/drm/lima/lima_drv.h
+++ b/drivers/gpu/drm/lima/lima_drv.h
@@ -47,6 +47,7 @@ struct lima_drm_priv {
 struct lima_submit {
 	struct lima_ctx *ctx;
 	int pipe;
+	u32 flags;
 
 	struct drm_lima_gem_submit_bo *bos;
 	struct ttm_validate_buffer *vbs;
@@ -57,10 +58,14 @@ struct lima_submit {
 	struct list_head duplicates;
 	struct list_head validated;
 
+	union drm_lima_gem_submit_dep *deps;
+	u32 nr_deps;
+
 	struct lima_sched_task *task;
 
 	uint32_t fence;
 	uint32_t done;
+	int sync_fd;
 };
 
 static inline struct lima_drm_priv *
diff --git a/drivers/gpu/drm/lima/lima_gem.c b/drivers/gpu/drm/lima/lima_gem.c
index 00fd6be..de6f7b6 100644
--- a/drivers/gpu/drm/lima/lima_gem.c
+++ b/drivers/gpu/drm/lima/lima_gem.c
@@ -23,6 +23,7 @@
 #include <drm/drmP.h>
 #include <linux/dma-mapping.h>
 #include <linux/pagemap.h>
+#include <linux/sync_file.h>
 
 #include <drm/lima_drm.h>
 
@@ -231,12 +232,24 @@ int lima_gem_va_unmap(struct drm_file *file, u32 handle, u32 va)
 	return err;
 }
 
-static int lima_gem_sync_bo(struct lima_sched_task *task, struct lima_bo *bo, bool write)
+static int lima_gem_sync_bo(struct lima_sched_task *task, struct lima_bo *bo,
+			    bool write, bool explicit)
 {
 	int i, err;
 	struct dma_fence *f;
 	u64 context = task->base.s_fence->finished.context;
 
+	if (!write) {
+		err = reservation_object_reserve_shared(bo->tbo.resv);
+		if (err)
+			return err;
+	}
+
+	/* explicit sync use user passed dep fence */
+	if (explicit)
+		return 0;
+
+	/* implicit sync use bo fence in resv obj */
 	if (write) {
 		struct reservation_object_list *fobj =
 			reservation_object_get_list(bo->tbo.resv);
@@ -244,7 +257,8 @@ static int lima_gem_sync_bo(struct lima_sched_task *task, struct lima_bo *bo, bo
 		if (fobj && fobj->shared_count > 0) {
 			for (i = 0; i < fobj->shared_count; i++) {
 				f = rcu_dereference_protected(
-					fobj->shared[i], reservation_object_held(bo->tbo.resv));
+					fobj->shared[i],
+					reservation_object_held(bo->tbo.resv));
 				if (f->context != context) {
 					err = lima_sched_task_add_dep(task, f);
 					if (err)
@@ -261,13 +275,63 @@ static int lima_gem_sync_bo(struct lima_sched_task *task, struct lima_bo *bo, bo
 			return err;
 	}
 
-	if (!write) {
-		err = reservation_object_reserve_shared(bo->tbo.resv);
-		if (err)
-			return err;
+	return 0;
+}
+
+static int lima_gem_add_deps(struct lima_ctx_mgr *mgr, struct lima_submit *submit)
+{
+	int i, err = 0;
+
+	for (i = 0; i < submit->nr_deps; i++) {
+		union drm_lima_gem_submit_dep *dep = submit->deps + i;
+		struct dma_fence *fence;
+
+		if (dep->type == LIMA_SUBMIT_DEP_FENCE) {
+			struct lima_ctx *ctx;
+
+			if (dep->fence.pipe >= lima_pipe_num) {
+				err = -EINVAL;
+				break;
+			}
+
+			ctx = lima_ctx_get(mgr, dep->fence.ctx);
+			if (!ctx) {
+				err = -ENOENT;
+				break;
+			}
+
+			fence = lima_sched_context_get_fence(
+				ctx->context + dep->fence.pipe,
+				dep->fence.seq);
+
+			lima_ctx_put(ctx);
+
+			if (IS_ERR(fence)) {
+				err = PTR_ERR(fence);
+				break;
+			}
+		}
+		else if (dep->type == LIMA_SUBMIT_DEP_SYNC_FD) {
+			fence = sync_file_get_fence(dep->sync_fd.fd);
+			if (!fence) {
+				err = -EINVAL;
+				break;
+			}
+		}
+		else {
+			err = -EINVAL;
+			break;
+		}
+
+		if (fence) {
+			err = lima_sched_task_add_dep(submit->task, fence);
+			dma_fence_put(fence);
+			if (err)
+				break;
+		}
 	}
 
-	return 0;
+	return err;
 }
 
 int lima_gem_submit(struct drm_file *file, struct lima_submit *submit)
@@ -309,16 +373,44 @@ int lima_gem_submit(struct drm_file *file, struct lima_submit *submit)
 	if (err)
 		goto out1;
 
+	err = lima_gem_add_deps(&priv->ctx_mgr, submit);
+	if (err)
+		goto out2;
+
 	for (i = 0; i < submit->nr_bos; i++) {
 		struct ttm_validate_buffer *vb = submit->vbs + i;
 		struct lima_bo *bo = ttm_to_lima_bo(vb->bo);
-		err = lima_gem_sync_bo(submit->task, bo, !vb->shared);
+		err = lima_gem_sync_bo(
+			submit->task, bo, !vb->shared,
+			submit->flags & LIMA_SUBMIT_FLAG_EXPLICIT_FENCE);
 		if (err)
 			goto out2;
 	}
 
+	if (submit->flags & LIMA_SUBMIT_FLAG_SYNC_FD_OUT) {
+		struct sync_file *sync_file;
+		int fd;
+
+		fd = get_unused_fd_flags(O_CLOEXEC);
+		if (fd < 0) {
+			err = fd;
+			goto out2;
+		}
+
+		sync_file = sync_file_create(
+			&submit->task->base.s_fence->finished);
+		if (!sync_file) {
+			put_unused_fd(fd);
+			err = -ENOMEM;
+			goto out2;
+		}
+		fd_install(fd, sync_file->file);
+		submit->sync_fd = fd;
+	}
+
 	submit->fence = lima_sched_context_queue_task(
-		submit->ctx->context + submit->pipe, submit->task, &submit->done);
+		submit->ctx->context + submit->pipe, submit->task,
+		&submit->done);
 
 	ttm_eu_fence_buffer_objects(&submit->ticket, &submit->validated,
 				    &submit->task->base.s_fence->finished);
diff --git a/drivers/gpu/drm/lima/lima_sched.c b/drivers/gpu/drm/lima/lima_sched.c
index 8e4f2ff..a8ea412 100644
--- a/drivers/gpu/drm/lima/lima_sched.c
+++ b/drivers/gpu/drm/lima/lima_sched.c
@@ -246,8 +246,8 @@ static uint32_t lima_sched_context_add_fence(struct lima_sched_context *context,
 	return seq;
 }
 
-static struct dma_fence *lima_sched_context_get_fence(struct lima_sched_context *context,
-						      uint32_t seq)
+struct dma_fence *lima_sched_context_get_fence(
+	struct lima_sched_context *context, uint32_t seq)
 {
 	struct dma_fence *fence;
 	int idx;
diff --git a/drivers/gpu/drm/lima/lima_sched.h b/drivers/gpu/drm/lima/lima_sched.h
index b02c4f5..bba9886 100644
--- a/drivers/gpu/drm/lima/lima_sched.h
+++ b/drivers/gpu/drm/lima/lima_sched.h
@@ -105,6 +105,8 @@ void lima_sched_context_fini(struct lima_sched_pipe *pipe,
 uint32_t lima_sched_context_queue_task(struct lima_sched_context *context,
 				       struct lima_sched_task *task,
 				       uint32_t *done);
+struct dma_fence *lima_sched_context_get_fence(
+	struct lima_sched_context *context, uint32_t seq);
 int lima_sched_context_wait_fence(struct lima_sched_context *context,
 				  u32 fence, u64 timeout_ns);
 
diff --git a/include/uapi/drm/lima_drm.h b/include/uapi/drm/lima_drm.h
index cfe5596..364eeb5 100644
--- a/include/uapi/drm/lima_drm.h
+++ b/include/uapi/drm/lima_drm.h
@@ -69,6 +69,27 @@ struct drm_lima_gem_submit_bo {
 	__u32 flags;   /* in */
 };
 
+#define LIMA_SUBMIT_DEP_FENCE   0x00
+#define LIMA_SUBMIT_DEP_SYNC_FD 0x01
+
+struct drm_lima_gem_submit_dep_fence {
+	__u32 type;
+	__u32 ctx;
+	__u32 pipe;
+	__u32 seq;
+};
+
+struct drm_lima_gem_submit_dep_sync_fd {
+	__u32 type;
+	__u32 fd;
+};
+
+union drm_lima_gem_submit_dep {
+	__u32 type;
+	struct drm_lima_gem_submit_dep_fence fence;
+	struct drm_lima_gem_submit_dep_sync_fd sync_fd;
+};
+
 #define LIMA_GP_FRAME_REG_NUM 6
 
 struct drm_lima_gp_frame {
@@ -97,6 +118,9 @@ struct drm_lima_m450_pp_frame {
 #define LIMA_PIPE_GP  0x00
 #define LIMA_PIPE_PP  0x01
 
+#define LIMA_SUBMIT_FLAG_EXPLICIT_FENCE (1 << 0)
+#define LIMA_SUBMIT_FLAG_SYNC_FD_OUT    (1 << 1)
+
 struct drm_lima_gem_submit_in {
 	__u32 ctx;
 	__u32 pipe;
@@ -104,11 +128,16 @@ struct drm_lima_gem_submit_in {
 	__u32 frame_size;
 	__u64 bos;
 	__u64 frame;
+	__u64 deps;
+	__u32 nr_deps;
+	__u32 flags;
 };
 
 struct drm_lima_gem_submit_out {
 	__u32 fence;
 	__u32 done;
+	__u32 sync_fd;
+	__u32 _pad;
 };
 
 union drm_lima_gem_submit {
-- 
2.0.1

