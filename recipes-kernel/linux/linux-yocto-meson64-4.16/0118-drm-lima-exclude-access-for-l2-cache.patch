From 74dd1a9dfee437a217300e6a37bf764f39be5f2e Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Sat, 14 Apr 2018 16:46:12 +0800
Subject: [PATCH 118/120] drm/lima: exclude access for l2 cache

On mali400, GP and PP pipe may access the same
l2 cache at the same time.

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/lima_device.h   | 2 ++
 drivers/gpu/drm/lima/lima_l2_cache.c | 9 ++++++++-
 drivers/gpu/drm/lima/lima_sched.c    | 7 ++++++-
 3 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima_device.h b/drivers/gpu/drm/lima/lima_device.h
index 85dc186..2e0b89a 100644
--- a/drivers/gpu/drm/lima/lima_device.h
+++ b/drivers/gpu/drm/lima/lima_device.h
@@ -75,6 +75,8 @@ struct lima_ip {
 		unsigned switch_delay;
 		/* gp/pp */
 		bool async_reset;
+		/* l2 cache */
+		spinlock_t lock;
 	} data;
 };
 
diff --git a/drivers/gpu/drm/lima/lima_l2_cache.c b/drivers/gpu/drm/lima/lima_l2_cache.c
index 53a5e33..923ee9f 100644
--- a/drivers/gpu/drm/lima/lima_l2_cache.c
+++ b/drivers/gpu/drm/lima/lima_l2_cache.c
@@ -63,8 +63,13 @@ static int lima_l2_cache_wait_idle(struct lima_ip *ip)
 
 int lima_l2_cache_flush(struct lima_ip *ip)
 {
+	int ret;
+
+	spin_lock(&ip->data.lock);
 	l2_cache_write(COMMAND, LIMA_L2_CACHE_COMMAND_CLEAR_ALL);
-	return lima_l2_cache_wait_idle(ip);
+	ret = lima_l2_cache_wait_idle(ip);
+	spin_unlock(&ip->data.lock);
+	return ret;
 }
 
 int lima_l2_cache_init(struct lima_ip *ip)
@@ -83,6 +88,8 @@ int lima_l2_cache_init(struct lima_ip *ip)
 			return -ENODEV;
 	}
 
+	spin_lock_init(&ip->data.lock);
+
 	size = l2_cache_read(SIZE);
 	dev_info(dev->dev, "l2 cache %uK, %u-way, %ubyte cache line, %ubit external bus\n",
 		 1 << (((size >> 16) & 0xff) - 10),
diff --git a/drivers/gpu/drm/lima/lima_sched.c b/drivers/gpu/drm/lima/lima_sched.c
index 1cd6891..7d3b1af 100644
--- a/drivers/gpu/drm/lima/lima_sched.c
+++ b/drivers/gpu/drm/lima/lima_sched.c
@@ -367,7 +367,12 @@ static struct dma_fence *lima_sched_run_job(struct drm_sched_job *job)
 	 * 1. is it related to TLB
 	 * 2. how much performance will be affected by L2 cache flush
 	 * 3. can we reduce the calling of this function because all
-	 *    GP/PP use the same L2 cache
+	 *    GP/PP use the same L2 cache on mali400
+	 *
+	 * TODO:
+	 * 1. move this to task fini to save some wait time?
+	 * 2. when GP/PP use different l2 cache, need PP wait GP l2
+	 *    cache flush?
 	 */
 	for (i = 0; i < pipe->num_l2_cache; i++)
 		lima_l2_cache_flush(pipe->l2_cache[i]);
-- 
2.0.1

